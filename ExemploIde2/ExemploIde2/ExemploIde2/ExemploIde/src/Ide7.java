
import java.io.File;
import java.io.FileFilter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */


public class Ide7 extends javax.swing.JFrame {

    /**
     * Creates new form Antenna
     */
    public Ide7() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jFrame1.setSize(new java.awt.Dimension(600, 400));

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jFrame1Layout = new org.jdesktop.layout.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrame1Layout.createSequentialGroup()
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 10, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jFrame1Layout.createSequentialGroup()
                .add(jFileChooser1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Exemplo");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Código Fonte"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(4);
        jTextArea1.setText("programa{\n\n\tpublic void main(){\n\t\t\n\t}\n}");
        jScrollPane2.setViewportView(jTextArea1);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Mensagens"));

        jScrollPane3.setViewportView(jTextPane1);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        jButton3.setText("Análise Sintática/Semântica");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Importar Código");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salvar Código");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(jButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 84, Short.MAX_VALUE)
                        .add(jButton3))
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButton3)
                            .add(jButton1)
                            .add(jButton2)))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Lexico lex = new Lexico();
        Sintatico sin = new Sintatico();
        Semantico sem = new Semantico();
        PreenchedorTabela preenchedor = new PreenchedorTabela(jTable1);
        String conteudo[][] = new String[100][12];
        String cabecalho[] = new String[12];
        int lin = 0;
        String anexos = "";
        
        lex.setInput(jTextArea1.getText());
        try{
            sin.parse(lex, sem);
            //System.out.println("TABELA DE SIMBOLOS \n");
            cabecalho[0] = "Tipo";
            cabecalho[1] = "ID";
            cabecalho[2] = "Escopo";
            cabecalho[3] = "Função";
            cabecalho[4] = "Inicializado";
            cabecalho[5] = "Usado";
            cabecalho[6] = "Matriz";
            cabecalho[7] = "Parametro";
            cabecalho[8] = "Posição";
            cabecalho[9] = "Referência";
            cabecalho[10] = "Vetor";
            cabecalho[11] = "Tamanho Vetor";
            lin = 0;
            for (Symbol simb : sem.listaSimbolos) {
                //System.out.println("tipo: "+simb.tipo);
                conteudo[lin][0] = simb.tipo;
                //System.out.println("id: "+simb.id);
                conteudo[lin][1] = simb.id;
                //System.out.println("escopo: "+simb.escopo);
                conteudo[lin][2] = String.valueOf(simb.escopo);
                //System.out.println("funcao: "+simb.funcao);
                conteudo[lin][3] = String.valueOf(simb.funcao);
                //System.out.println("inicializado: "+simb.inicializado);
                conteudo[lin][4] = String.valueOf(simb.inicializado);
                if(simb.inicializado==false && simb.funcao==false && simb.parametro==false && simb.usado == false){
                    anexos = anexos + "\n Simbolo "+simb.id+" declarado porém não utilizada!";
                }
                //System.out.println("usado: "+simb.usado);
                conteudo[lin][5] = String.valueOf(simb.usado);
                if(simb.inicializado==false && simb.funcao==false && simb.usado == true && simb.parametro == false){
                    anexos = anexos + "\n Simbolo "+simb.id+" usado porém não inicializado! Perigo de lixo de memória.";
                }
                //System.out.println("matriz: "+simb.matriz);
                conteudo[lin][6] = String.valueOf(simb.matriz);
                //System.out.println("parametros: "+simb.parametro);
                conteudo[lin][7] = String.valueOf(simb.parametro);
                //System.out.println("pos: "+simb.pos);
                conteudo[lin][8] = String.valueOf(simb.pos);
                //System.out.println("referencia: "+simb.referencia);
                conteudo[lin][9] = String.valueOf(simb.referencia);
                //System.out.println("vetor: "+simb.vetor);
                conteudo[lin][10] = String.valueOf(simb.vetor);
                //System.out.println("================== \n\n\n");
                conteudo[lin][11] = String.valueOf(simb.tamanho);
                lin++;
            }
            imprime_variaveis_assembly(conteudo);
            preenchedor.atualizarDados(conteudo, cabecalho);
            while(!sem.pilhaEscopo.empty()){
               // System.out.println("Primeiro pop: "+sem.pilhaEscopo.pop());
            }
            sem.listaSimbolos.clear();
            
            jTextPane1.setText("Código executado com sucesso!"+anexos);
        }
        catch (SemanticError e) {
             jTextPane1.setText(e.getMessage());
            //System.out.println(e.getMessage());
        } catch (LexicalError ex) {
            jTextPane1.setText(ex.getMessage());
           // System.out.println(ex.getMessage());
        } catch (SyntaticError ex) {
            jTextPane1.setText(ex.getMessage());
            //System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Importar código
        jFileChooser1.setApproveButtonText("Abrir");
        jFrame1.setVisible(true);
        
        jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("*.txt", "txt"));
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Salvar código
        jFileChooser1.setApproveButtonText("Salvar");
        jFrame1.setVisible(true);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        if(jFileChooser1.getApproveButtonText().equals("Abrir")){
        File f = jFileChooser1.getSelectedFile();
        
        try {
            FileInputStream fis = new FileInputStream(f);
            int content;
            String conteudo = "";
            while((content = fis.read()) != -1){
                //System.out.println((char) content);
                conteudo = conteudo + (char) content;
            }
            jTextArea1.setText(conteudo);
            jFrame1.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(Ide7.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            FileWriter arq = null;
            try {
                File f = jFileChooser1.getSelectedFile();
                System.out.println(f.getPath());
                arq = new FileWriter(f.getPath());
                PrintWriter gravarArq = new PrintWriter(arq);
                gravarArq.printf(jTextArea1.getText());
                jFrame1.setVisible(false);
            } catch (IOException ex) {
                Logger.getLogger(Ide7.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    arq.close();
                } catch (IOException ex) {
                    Logger.getLogger(Ide7.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels = javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx = 0; idx < installedLookAndFeels.length; idx++) {
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ide7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ide7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ide7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ide7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Ide7().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    private void imprime_variaveis_assembly(String[][] conteudo) {
        System.out.println(".data\n");
        boolean quebrou = false;
        int tamanho;
        String aux = "0";
        for(int i = 0; i<conteudo.length; i++){
            if(conteudo[i][0]==null){
                break;
            }            
            if(conteudo[i][10]=="true"){
                tamanho = Integer.parseInt(conteudo[i][11]);
                for(int j = 0; j<tamanho-1; j++){
                    aux = aux + ",0";
                }
                System.out.println("\t"+conteudo[i][1]+" : "+aux);
            }else{
                if(conteudo[i][3]=="false"){
                    System.out.println("\t"+conteudo[i][1]+" : 0");
                }
            }
            aux = "0";
        }
    }
}
